---
- name: Check whether Kubernetes has already been initialized.
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat

- name: Print kubeadm init command
  debug:
    msg: >-
      kubeadm init
      --pod-network-cidr {{ pod_network }}
      --token {{ kubeadm_token }}
      --kubernetes-version v{{ kubernetes_version }}
      --apiserver-cert-extra-sans {{ inventory_hostname }}
      {% if kubernetes_apiserver_advertise_address %}
      --apiserver-advertise-address {{ kubernetes_apiserver_advertise_address}}
      {% endif %}
      {% if kubernetes_ignore_preflight_errors %}
      --ignore-preflight-errors {{ kubernetes_ignore_preflight_errors }}
      {% endif %}
      {{ kubernetes_kubeadm_init_extra_opts }}
  when: not kubernetes_init_stat.stat.exists

- name: Run kubeadm init
  command: >-
    kubeadm init
    --pod-network-cidr {{ pod_network }}
    --token {{ kubeadm_token }}
    --kubernetes-version v{{ kubernetes_version }}
    --apiserver-cert-extra-sans {{ inventory_hostname }}
    {% if kubernetes_apiserver_advertise_address %}
    --apiserver-advertise-address {{ kubernetes_apiserver_advertise_address }}
    {% endif %}
    {% if kubernetes_ignore_preflight_errors %}
    --ignore-preflight-errors {{ kubernetes_ignore_preflight_errors }}
    {% endif %}
    {{ kubernetes_kubeadm_init_extra_opts }}
  when: not kubernetes_init_stat.stat.exists
  ignore_errors: true
  register: kubeadm_init

- name: Get kubelet logs
  command: journalctl -u kubelet
  when: not kubernetes_init_stat.stat.exists and kubeadm_init.failed
  register: kubelet_logs

- fail:
    msg: |
      kubeadm init failed to set up the cluster.
      Additional information information may be available in the kubelet logs:
      {{ kubelet_logs.stdout }}
  name: Fail when kubeadm init fails
  when: not kubernetes_init_stat.stat.exists and kubeadm_init.failed

- name: Remove the Kubernetes configuration directory
  file:
    path=~/.kube
    state=absent
  become: false
  when: not kubernetes_init_stat.stat.exists

- name: Create the Kubernetes configuration directory
  file:
    path=~/.kube
    state=directory
  become: false
  when: not kubernetes_init_stat.stat.exists

- name: Copy the Kubernetes configuration files
  command: |
    sudo cp -i /etc/kubernetes/admin.conf ~/.kube/config
  become: false
  when: not kubernetes_init_stat.stat.exists

- name: Fix permissions on the Kubernetes configuration file
  shell: |
    sudo chown $(id -u):$(id -g) ~/.kube/config
  become: false
  when: not kubernetes_init_stat.stat.exists

- name: Copy the Kubernetes configuration file
  fetch:
    src: ~/.kube/config
    dest: kubeconfig
  become: false

- name: Configure networking
  command: >-
    kubectl
    apply -f https://raw.githubusercontent.com/coreos/flannel/{{ flannel_version }}/Documentation/kube-flannel.yml
  become: false
  when: not kubernetes_init_stat.stat.exists

  # Only taint the master node if no worker nodes exist.
- name: Tainting the master node
  command: kubectl taint nodes --all node-role.kubernetes.io/master-
  become: false
  when: >-
    not kubernetes_init_stat.stat.exists
    and ('device-farm-workers' not in groups or groups['device-farm-workers'] | length == 0)

- name: Create Helm service account
  become: false
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: helm
        namespace: kube-system

- name: Create Helm ClusterRoleBinding
  become: false
  k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRoleBinding
      metadata:
        name: helm
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
        - kind: ServiceAccount
          name: helm
          namespace: kube-system

- name: Initializing Helm
  command: helm init --service-account helm
  become: false
  when: not helm_exists.stat.exists

- name: Waiting for Helm to become available
  command: kubectl rollout status -w deployment/tiller-deploy --namespace=kube-system
  become: false
  when: not helm_exists.stat.exists
